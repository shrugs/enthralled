/* eslint-disable no-unused-vars */
import { createCss } from '@stitches/react';

const spacing = {
  px: '1px',
  0: '0px',
  0.5: '0.125rem',
  1: '0.25rem',
  1.5: '0.375rem',
  2: '0.5rem',
  2.5: '0.625rem',
  3: '0.75rem',
  3.5: '0.875rem',
  4: '1rem',
  5: '1.25rem',
  6: '1.5rem',
  7: '1.75rem',
  8: '2rem',
  9: '2.25rem',
  10: '2.5rem',
  11: '2.75rem',
  12: '3rem',
  14: '3.5rem',
  16: '4rem',
  20: '5rem',
  24: '6rem',
  28: '7rem',
  32: '8rem',
  36: '9rem',
  40: '10rem',
  44: '11rem',
  48: '12rem',
  52: '13rem',
  56: '14rem',
  60: '15rem',
  64: '16rem',
  72: '18rem',
  80: '20rem',
  96: '24rem',
  //
  half: '50%',
  // '1/3': '33.333333%',
  // '2/3': '66.666667%',
  // '1/4': '25%',
  // '2/4': '50%',
  // '3/4': '75%',
  // '1/5': '20%',
  // '2/5': '40%',
  // '3/5': '60%',
  // '4/5': '80%',
  // '1/6': '16.666667%',
  // '2/6': '33.333333%',
  // '3/6': '50%',
  // '4/6': '66.666667%',
  // '5/6': '83.333333%',
  full: '100%',
  screen: '100vh',
};

export const { styled, global, keyframes, theme } = createCss({
  theme: {
    fonts: {
      sans: [
        'ui-sans-serif',
        'system-ui',
        '-apple-system',
        'BlinkMacSystemFont',
        '"Segoe UI"',
        'Roboto',
        '"Helvetica Neue"',
        'Arial',
        '"Noto Sans"',
        'sans-serif',
        '"Apple Color Emoji"',
        '"Segoe UI Emoji"',
        '"Segoe UI Symbol"',
        '"Noto Color Emoji"',
      ].join(', '),
      serif: ['ui-serif', 'Georgia', 'Cambria', '"Times New Roman"', 'Times', 'serif'].join(', '),
      mono: [
        'ui-monospace',
        'SFMono-Regular',
        'Menlo',
        'Monaco',
        'Consolas',
        '"Liberation Mono"',
        '"Courier New"',
        'monospace',
      ].join(', '),
    },
    fontSizes: {
      xs: '0.75rem',
      sm: '0.875rem',
      base: '1rem',
      lg: '1.125rem',
      xl: '1.25rem',
      '2xl': '1.5rem',
      '3xl': '1.875rem',
      '4xl': '2.25rem',
      '5xl': '3rem',
      '6xl': '3.75rem',
      '7xl': '4.5rem',
      '8xl': '6rem',
      '9xl': '8rem',
    },
    fontWeights: {
      thin: '100',
      extralight: '200',
      light: '300',
      normal: '400',
      medium: '500',
      semibold: '600',
      bold: '700',
      extrabold: '800',
      black: '900',
    },
    letterSpacings: {
      tighter: '-0.05em',
      tight: '-0.025em',
      normal: '0em',
      wide: '0.025em',
      wider: '0.05em',
      widest: '0.1em',
    },
    lineHeights: {
      none: '1',
      tight: '1.25',
      snug: '1.375',
      normal: '1.5',
      relaxed: '1.625',
      loose: '2',
      3: '.75rem',
      4: '1rem',
      5: '1.25rem',
      6: '1.5rem',
      7: '1.75rem',
      8: '2rem',
      9: '2.25rem',
      10: '2.5rem',
    },
    shadows: {
      sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
      base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
      md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
      lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
      xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
      '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
      inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',
      none: 'none',
    },
    colors: {
      transparent: 'transparent',
      current: 'currentColor',
      black: '#000',
      white: '#fff',
    },
    borderWidths: {
      0: '0px',
      1: '1px',
      2: '2px',
      4: '4px',
      8: '8px',
    },
    space: spacing,
    sizes: spacing,
    radii: {
      none: '0px',
      sm: '0.125rem',
      base: '0.25rem',
      md: '0.375rem',
      lg: '0.5rem',
      xl: '0.75rem',
      '2xl': '1rem',
      '3xl': '1.5rem',
      full: '9999px',
    },
    zIndices: {
      1: '100',
      max: '999',
    },
  },
  media: {
    sm: '@media (min-width: 640px)',
    md: '@media (min-width: 768px)',
    lg: '@media (min-width: 1024px)',
    xl: '@media (min-width: 1280px)',
    '2xl': '@media (min-width: 1536px)',
    // motion: '(prefers-reduced-motion)',
    // hover: '(any-hover: hover)',
    // dark: '(prefers-color-scheme: dark)',
    // light: '(prefers-color-scheme: light)',
  },
  utils: {
    // padding
    p: (config) => (value: any) => ({
      paddingTop: value,
      paddingBottom: value,
      paddingLeft: value,
      paddingRight: value,
    }),
    pt: (config) => (value: any) => ({ paddingTop: value }),
    pr: (config) => (value: any) => ({ paddingRight: value }),
    pb: (config) => (value: any) => ({ paddingBottom: value }),
    pl: (config) => (value: any) => ({ paddingLeft: value }),
    px: (config) => (value: any) => ({ paddingLeft: value, paddingRight: value }),
    py: (config) => (value: any) => ({ paddingTop: value, paddingBottom: value }),

    // margin
    m: (config) => (value: any) => ({
      marginTop: value,
      marginBottom: value,
      marginLeft: value,
      marginRight: value,
    }),
    mt: (config) => (value: any) => ({ marginTop: value }),
    mr: (config) => (value: any) => ({ marginRight: value }),
    mb: (config) => (value: any) => ({ marginBottom: value }),
    ml: (config) => (value: any) => ({ marginLeft: value }),
    mx: (config) => (value: any) => ({ marginLeft: value, marginRight: value }),
    my: (config) => (value: any) => ({ marginTop: value, marginBottom: value }),

    ta: (config) => (value: any) => ({ textAlign: value }),
    bg: (config) => (value: any) => ({ background: value }),

    // flex
    fd: (config) => (value: any) => ({ flexDirection: value }),
    fw: (config) => (value: any) => ({ flexWrap: value }),
    ai: (config) => (value: any) => ({ alignItems: value }),
    ac: (config) => (value: any) => ({ alignContent: value }),
    jc: (config) => (value: any) => ({ justifyContent: value }),
    as: (config) => (value: any) => ({ alignSelf: value }),
    fg: (config) => (value: any) => ({ flexGrow: value }),
    fs: (config) => (value: any) => ({ flexShrink: value }),
    fb: (config) => (value: any) => ({ flexBasis: value }),

    br: (config) => (value: any) => ({ borderRadius: value }),
    // btrr: (config) => (value: any) => ({
    //   borderTopRightRadius: value,
    // }),
    // bbrr: (config) => (value: any) => ({
    //   borderBottomRightRadius: value,
    // }),
    // bblr: (config) => (value: any) => ({
    //   borderBottomLeftRadius: value,
    // }),
    // btlr: (config) => (value: any) => ({
    //   borderTopLeftRadius: value,
    // }),

    // bs: (config) => (value: any) => ({ boxShadow: value }),
    // lh: (config) => (value: any) => ({ lineHeight: value }),
    // ox: (config) => (value: any) => ({ overflowX: value }),
    // oy: (config) => (value: any) => ({ overflowY: value }),
    pe: (config) => (value: any) => ({ pointerEvents: value }),
    us: (config) => (value: any) => ({ WebkitUserSelect: value, userSelect: value }),

    w: (config) => (value: any) => ({ width: value }),
    h: (config) => (value: any) => ({ height: value }),
    size: (config) => (value: any) => ({ width: value, height: value }),

    // linearGradient: (config) => (value: any) => ({
    //   backgroundImage: `linear-gradient(${value})`,
    // }),

    appearance: (config) => (value) => ({ WebkitAppearance: value, appearance: value }),
    // backgroundClip: (config) => (value) => ({
    //   WebkitBackgroundClip: value,
    //   backgroundClip: value,
    // }),
  },
});
